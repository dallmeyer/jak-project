;;-*-Lisp-*-
(in-package goal)

;; most of this horrible mess is stolen from `save-game!`
(defun partial-backup-game-info ((obj game-info) (arg0 game-save) (arg1 string)) 
  (let ((buzz-rounded (- (-> obj buzzer-total) (mod (the int (-> obj buzzer-total)) 7))))
    ;; some stuff lives in the levels and needs to be copied into game-info.
    (dotimes (s3-0 (-> *level* length))
      (let ((a1-1 (-> *level* level s3-0)))
        (if (= (-> a1-1 status) 'active)
          (copy-perms-from-level! obj a1-1)
          )
        )
      )

    ;; set common data
    (set! (-> arg0 length) 0)
    (set! (-> arg0 version) 1)
    (set! (-> arg0 level-index) (-> (lookup-level-info (-> obj current-continue level)) index))
    (set! (-> arg0 fuel-cell-count) (-> obj fuel))
    (set! (-> arg0 money-count) 0.0)  ;; reset orbs
    (set! (-> arg0 buzzer-count) buzz-rounded)   ;; either did or didnt get all flies in level, so always multiples of 7
    (set! (-> arg0 completion-percentage) (calculate-completion (the-as progress #f)))
    (let ((s3-1 (new 'stack 'scf-time)))
      (scf-get-time s3-1)
      (when (zero? (-> s3-1 stat))
        (set! (-> arg0 minute) (-> s3-1 minute))
        (set! (-> arg0 hour) (-> s3-1 hour))
        (set! (-> arg0 day) (-> s3-1 day))
        (set! (-> arg0 week) (-> s3-1 week))
        (set! (-> arg0 month) (-> s3-1 month))
        (set! (-> arg0 year) (-> s3-1 year))
        )
      )
    (let ((s3-2 (the-as object (-> arg0 tag))))
      (let ((s2-0 (-> (the-as (inline-array game-save-tag) s3-2) 0)))
        (set! (-> s2-0 elt-type) (game-save-elt name))
        (set! (-> s2-0 elt-count) (+ (length arg1) 1))
        (set! (-> s2-0 elt-size) (the-as uint 1))
        )
      (copy-charp<-charp (the-as (pointer uint8) (-> (the-as (inline-array game-save-tag) s3-2) 1)) (-> arg1 data))
      (let ((v1-37 (&+
                    (the-as pointer s3-2)
                    (+ (logand -16 (+ (-> (the-as (inline-array game-save-tag) s3-2) 0 elt-count) 15)) 16)
                    )
                  )
            )
        (let ((a0-15 (the-as game-save-tag (&+ v1-37 0))))
          (set! (-> a0-15 elt-type) (game-save-elt base-time))
          (set! (-> a0-15 elt-count) 0)
          (set! (-> a0-15 user-uint64) (the-as uint (-> *display* base-frame-counter)))
          )
        (let ((v1-38 (&+ v1-37 16)))
          (let ((a0-16 (the-as game-save-tag (&+ v1-38 0))))
            (set! (-> a0-16 elt-type) (game-save-elt real-time))
            (set! (-> a0-16 elt-count) 0)
            (set! (-> a0-16 user-uint64) (the-as uint (-> *display* real-frame-counter)))
            )
          (let ((v1-39 (&+ v1-38 16)))
            (let ((a0-17 (the-as game-save-tag (&+ v1-39 0))))
              (set! (-> a0-17 elt-type) (game-save-elt game-time))
              (set! (-> a0-17 elt-count) 0)
              (set! (-> a0-17 user-uint64) (the-as uint (-> *display* game-frame-counter)))
              )
            (let ((v1-40 (&+ v1-39 16)))
              (let ((a0-18 (the-as game-save-tag (&+ v1-40 0))))
                (set! (-> a0-18 elt-type) (game-save-elt integral-time))
                (set! (-> a0-18 elt-count) 0)
                (set! (-> a0-18 user-uint64) (the-as uint (-> *display* integral-frame-counter)))
                )
              (let ((s4-1 (the-as object (&+ v1-40 16))))
                (let ((s3-3 (-> obj current-continue name)))
                  (let ((s2-1 (the-as game-save-tag (-> (the-as game-save-tag s4-1) user-object))))
                    (set! (-> s2-1 elt-type) (game-save-elt continue))
                    (set! (-> s2-1 elt-count) (+ ((method-of-type string length) s3-3) 1))
                    (set! (-> s2-1 elt-size) (the-as uint 1))
                    )
                  (copy-charp<-charp
                    (the-as (pointer uint8) (the-as game-save-tag (&+ (the-as game-save-tag s4-1) 16)))
                    (-> s3-3 data)
                    )
                  )
                (let ((v1-50 (&+ (the-as pointer s4-1) (+ (logand -16 (+ (-> (the-as game-save-tag s4-1) elt-count) 15)) 16))))
                  (let ((a0-24 (the-as game-save-tag (&+ v1-50 0))))
                    (set! (-> a0-24 elt-type) (game-save-elt life))
                    (set! (-> a0-24 elt-count) 0)
                    (set! (-> a0-24 user-float0) (-> obj life))
                    )
                  (let ((v1-51 (&+ v1-50 16)))
                    (let ((a0-25 (the-as game-save-tag (&+ v1-51 0))))
                      (set! (-> a0-25 elt-type) (game-save-elt buzzer-total))
                      (set! (-> a0-25 elt-count) 0)
                      (set! (-> a0-25 user-float0) buzz-rounded)
                      )
                    (let ((v1-52 (&+ v1-51 16)))
                      (let ((a0-26 (the-as game-save-tag (&+ v1-52 0))))
                        (set! (-> a0-26 elt-type) (game-save-elt fuel-cell))
                        (set! (-> a0-26 elt-count) 0)
                        (set! (-> a0-26 user-float0) (-> obj fuel))
                        )
                      (let ((v1-53 (&+ v1-52 16)))
                        (let ((a0-27 (the-as game-save-tag (&+ v1-53 0))))
                          (set! (-> a0-27 elt-type) (game-save-elt death-movie-tick))
                          (set! (-> a0-27 elt-count) 0)
                          (set! (-> a0-27 user-uint64) (the-as uint (-> obj death-movie-tick)))
                          )
                        (let ((v1-54 (&+ v1-53 16)))
                          (let ((a0-28 (the-as game-save-tag (&+ v1-54 0))))
                            (set! (-> a0-28 elt-type) (game-save-elt money))
                            (set! (-> a0-28 elt-count) 0)
                            (set! (-> a0-28 user-float0) 0.0)
                            )
                          (let ((v1-55 (&+ v1-54 16)))
                            (let ((a0-29 (the-as game-save-tag (&+ v1-55 0))))
                              (set! (-> a0-29 elt-type) (game-save-elt money-total))
                              (set! (-> a0-29 elt-count) 0)
                              (set! (-> a0-29 user-float0) 0.0)
                              )
                            (let ((v1-56 (&+ v1-55 16)))
                              (let ((a0-30 (the-as game-save-tag (&+ v1-56 0))))
                                (set! (-> a0-30 elt-type) (game-save-elt money-per-level))
                                (set! (-> a0-30 elt-count) 32)
                                (set! (-> a0-30 elt-size) (the-as uint 1))
                                )
                              (let ((v1-57 (&+ v1-56 16)))
                                (dotimes (a0-31 32)
                                  (set! (-> (the-as (pointer uint8) (&+ v1-57 a0-31))) 0)
                                  )
                                (let ((v1-58 (&+ v1-57 32)))
                                  (let ((a0-34 (the-as object (&+ v1-58 0))))
                                    (set! (-> (the-as game-save-tag a0-34) elt-type) (game-save-elt level-open-list))
                                    (set! (-> (the-as game-save-tag a0-34) elt-count) 32)
                                    (set! (-> (the-as game-save-tag a0-34) elt-size) (the-as uint 1))
                                    )
                                  (let ((v1-59 (&+ v1-58 16)))
                                    (dotimes (a0-35 32)
                                      (set! (-> (the-as (pointer uint8) (&+ v1-59 a0-35))) (-> obj level-opened a0-35))
                                      )
                                    (let ((v1-60 (&+ v1-59 32))
                                          (s4-2 (-> (the-as (pointer int32) (-> obj perm-list)) 0))
                                          )
                                      (let ((a0-39 (the-as game-save-tag (&+ v1-60 0))))
                                        (set! (-> a0-39 elt-type) (game-save-elt perm-list))
                                        (set! (-> a0-39 elt-count) s4-2)
                                        (set! (-> a0-39 elt-size) (the-as uint 16))
                                        )
                                      (let ((s3-4 (&+ v1-60 16)))
                                        (dotimes (s2-2 s4-2)
                                          (let* ((perm (-> obj perm-list data s2-2))
                                                 (proc (-> (entity-by-aid (the uint (-> perm aid))) extra process))
                                                 )
                                            (when (or (not proc)
                                                      (not (type-type? (-> proc type) process-drawable)) 
                                                      (zero? (-> (the process-drawable proc) fact))
                                                      (and (!= (-> (the process-drawable proc) fact pickup-type) (pickup-type money))
                                                           (or (!= (-> (the process-drawable proc) fact pickup-type) (pickup-type buzzer))
                                                               (task-complete? *game-info* (-> perm task))
                                                               )
                                                           )
                                                      )
                                              (mem-copy!
                                                (the-as pointer (the-as game-save-tag (&+ s3-4 (* s2-2 16))))
                                                (the-as pointer (-> obj perm-list data s2-2))
                                                16
                                                )
                                              )
                                            )
                                          )
                                        (let ((v1-68 (&+ s3-4 (logand -16 (+ (* s4-2 16) 15))))
                                              (s4-3 (-> obj task-perm-list length))
                                              )
                                          (let ((a0-45 (the-as game-save-tag (&+ v1-68 0))))
                                            (set! (-> a0-45 elt-type) (game-save-elt task-list))
                                            (set! (-> a0-45 elt-count) s4-3)
                                            (set! (-> a0-45 elt-size) (the-as uint 16))
                                            )
                                          (let ((s3-5 (&+ v1-68 16)))
                                            (dotimes (s2-3 s4-3)
                                              (let* ((perm (-> obj task-perm-list data s2-3))
                                                    (proc (-> (entity-by-aid (the uint (-> perm aid))) extra process))
                                                    )
                                                (when (or (not proc)
                                                          (not (type-type? (-> proc type) process-drawable)) 
                                                          (zero? (-> (the process-drawable proc) fact))
                                                          (and (!= (-> (the process-drawable proc) fact pickup-type) (pickup-type money))
                                                              (or (!= (-> (the process-drawable proc) fact pickup-type) (pickup-type buzzer))
                                                                  (task-complete? *game-info* (-> perm task))
                                                                  )
                                                              )
                                                          )
                                                  (mem-copy!
                                                    (the-as pointer (the-as game-save-tag (&+ s3-5 (* s2-3 16))))
                                                    (the-as pointer (-> obj task-perm-list data s2-3))
                                                    16
                                                    )
                                                  )
                                                )
                                              )
                                            (let ((a0-49 (&+ s3-5 (logand -16 (+ (* s4-3 16) 15))))
                                                  (v1-79 (/ (logand -8 (+ (-> obj text-ids-seen allocated-length) 7)) 8))
                                                  )
                                              (let ((a1-46 (the-as object (&+ a0-49 0))))
                                                (set! (-> (the-as game-save-tag a1-46) elt-type) (game-save-elt text-list))
                                                (set! (-> (the-as game-save-tag a1-46) elt-count) v1-79)
                                                (set! (-> (the-as game-save-tag a1-46) elt-size) (the-as uint 1))
                                                )
                                              (let ((a0-50 (&+ a0-49 16)))
                                                (dotimes (a1-47 v1-79)
                                                  (set! (-> (the-as (pointer uint8) (&+ a0-50 a1-47))) (-> obj text-ids-seen bytes a1-47))
                                                  )
                                                (let ((a0-51 (&+ a0-50 (logand -16 (+ v1-79 15))))
                                                      (v1-84 (-> obj hint-control length))
                                                      )
                                                  (let ((a1-51 (the-as game-save-tag (&+ a0-51 0))))
                                                    (set! (-> a1-51 elt-type) (game-save-elt hint-list))
                                                    (set! (-> a1-51 elt-count) v1-84)
                                                    (set! (-> a1-51 elt-size) (the-as uint 32))
                                                    )
                                                  (let ((a0-52 (&+ a0-51 16)))
                                                    (dotimes (a1-52 v1-84)
                                                      (set! (-> (the-as (pointer int64) (&+ a0-52 (* (* a1-52 4) 8)))) (-> obj hint-control a1-52 start-time))
                                                      (set! (-> (the-as (pointer int64) (&+ a0-52 (* (+ (* a1-52 4) 1) 8))))
                                                            (-> obj hint-control a1-52 last-time-called)
                                                            )
                                                      (set! (-> (the-as (pointer int8) (&+ a0-52 (+ (* a1-52 32) 16)))) (-> obj hint-control a1-52 num-attempts))
                                                      (set! (-> (the-as (pointer int8) (&+ a0-52 (+ (* a1-52 32) 17)))) (-> obj hint-control a1-52 num-success))
                                                      )
                                                    (let ((v1-86 (&+ a0-52 (* v1-84 32))))
                                                      (let ((a0-54 (the-as game-save-tag (&+ v1-86 0))))
                                                        (set! (-> a0-54 elt-type) (game-save-elt auto-save-count))
                                                        (set! (-> a0-54 elt-count) 0)
                                                        (set! (-> a0-54 user-uint64) (the-as uint (-> obj auto-save-count)))
                                                        )
                                                      (let ((v1-87 (&+ v1-86 16)))
                                                        (let ((a0-55 (the-as game-save-tag (&+ v1-87 0))))
                                                          (set! (-> a0-55 elt-type) (game-save-elt total-deaths))
                                                          (set! (-> a0-55 elt-count) 0)
                                                          (set! (-> a0-55 user-uint64) (the-as uint (-> obj total-deaths)))
                                                          )
                                                        (let ((v1-88 (&+ v1-87 16)))
                                                          (let ((a0-56 (the-as game-save-tag (&+ v1-88 0))))
                                                            (set! (-> a0-56 elt-type) (game-save-elt continue-deaths))
                                                            (set! (-> a0-56 elt-count) 0)
                                                            (set! (-> a0-56 user-uint64) (the-as uint (-> obj continue-deaths)))
                                                            )
                                                          (let ((v1-89 (&+ v1-88 16)))
                                                            (let ((a0-57 (the-as game-save-tag (&+ v1-89 0))))
                                                              (set! (-> a0-57 elt-type) (game-save-elt fuel-cell-deaths))
                                                              (set! (-> a0-57 elt-count) 0)
                                                              (set! (-> a0-57 user-uint64) (the-as uint (-> obj fuel-cell-deaths)))
                                                              )
                                                            (let ((v1-90 (&+ v1-89 16)))
                                                              (let ((a0-58 (the-as game-save-tag (&+ v1-90 0))))
                                                                (set! (-> a0-58 elt-type) (game-save-elt game-start-time))
                                                                (set! (-> a0-58 elt-count) 0)
                                                                (set! (-> a0-58 user-uint64) (the-as uint (-> obj game-start-time)))
                                                                )
                                                              (let ((v1-91 (&+ v1-90 16)))
                                                                (let ((a0-59 (the-as game-save-tag (&+ v1-91 0))))
                                                                  (set! (-> a0-59 elt-type) (game-save-elt continue-time))
                                                                  (set! (-> a0-59 elt-count) 0)
                                                                  (set! (-> a0-59 user-uint64) (the-as uint (-> obj continue-time)))
                                                                  )
                                                                (let ((v1-92 (&+ v1-91 16)))
                                                                  (let ((a0-60 (the-as game-save-tag (&+ v1-92 0))))
                                                                    (set! (-> a0-60 elt-type) (game-save-elt death-time))
                                                                    (set! (-> a0-60 elt-count) 0)
                                                                    (set! (-> a0-60 user-uint64) (the-as uint (-> obj death-time)))
                                                                    )
                                                                  (let ((v1-93 (&+ v1-92 16)))
                                                                    (let ((a0-61 (the-as game-save-tag (&+ v1-93 0))))
                                                                      (set! (-> a0-61 elt-type) (game-save-elt hit-time))
                                                                      (set! (-> a0-61 elt-count) 0)
                                                                      (set! (-> a0-61 user-uint64) (the-as uint (-> obj hit-time)))
                                                                      )
                                                                    (let ((v1-94 (&+ v1-93 16)))
                                                                      (let ((a0-62 (the-as game-save-tag (&+ v1-94 0))))
                                                                        (set! (-> a0-62 elt-type) (game-save-elt fuel-cell-pickup-time))
                                                                        (set! (-> a0-62 elt-count) 0)
                                                                        (set! (-> a0-62 user-uint64) (the-as uint (-> obj fuel-cell-pickup-time)))
                                                                        )
                                                                      (let ((v1-95 (&+ v1-94 16)))
                                                                        (let ((a0-63 (the-as game-save-tag (&+ v1-95 0))))
                                                                          (set! (-> a0-63 elt-type) (game-save-elt fuel-cell-time))
                                                                          (set! (-> a0-63 elt-count) 116)
                                                                          (set! (-> a0-63 elt-size) (the-as uint 8))
                                                                          )
                                                                        (let ((v1-96 (&+ v1-95 16)))
                                                                          (let ((a0-64 (the-as object 0)))
                                                                            (while (< (the-as int a0-64) 116)
                                                                              (set! (-> (the-as (pointer int64) (&+ v1-96 (* (the-as int a0-64) 8))))
                                                                                    (-> obj fuel-cell-time (the-as int a0-64))
                                                                                    )
                                                                              (set! a0-64 (+ (the-as int a0-64) 1))
                                                                              )
                                                                            )
                                                                          (let ((v1-97 (&+ v1-96 928)))
                                                                            (let ((a0-67 (the-as game-save-tag (&+ v1-97 0))))
                                                                              (set! (-> a0-67 elt-type) (game-save-elt deaths-per-level))
                                                                              (set! (-> a0-67 elt-count) 32)
                                                                              (set! (-> a0-67 elt-size) (the-as uint 1))
                                                                              )
                                                                            (let ((v1-98 (&+ v1-97 16)))
                                                                              (dotimes (a0-68 32)
                                                                                (set! (-> (the-as (pointer uint8) (&+ v1-98 a0-68))) (-> obj deaths-per-level a0-68))
                                                                                )
                                                                              (let ((v1-99 (&+ v1-98 32)))
                                                                                (let ((a0-71 (the-as game-save-tag (&+ v1-99 0))))
                                                                                  (set! (-> a0-71 elt-type) (game-save-elt enter-level-time))
                                                                                  (set! (-> a0-71 elt-count) 32)
                                                                                  (set! (-> a0-71 elt-size) (the-as uint 8))
                                                                                  )
                                                                                (let ((v1-100 (&+ v1-99 16)))
                                                                                  (dotimes (a0-72 32)
                                                                                    (set! (-> (the-as (pointer int64) (&+ v1-100 (* a0-72 8)))) (-> obj enter-level-time a0-72))
                                                                                    )
                                                                                  (let ((v1-101 (&+ v1-100 256)))
                                                                                    (let ((a0-75 (the-as game-save-tag (&+ v1-101 0))))
                                                                                      (set! (-> a0-75 elt-type) (game-save-elt in-level-time))
                                                                                      (set! (-> a0-75 elt-count) 32)
                                                                                      (set! (-> a0-75 elt-size) (the-as uint 8))
                                                                                      )
                                                                                    (let ((v1-102 (&+ v1-101 16)))
                                                                                      (dotimes (a0-76 32)
                                                                                        (set! (-> (the-as (pointer int64) (&+ v1-102 (* a0-76 8)))) (-> obj in-level-time a0-76))
                                                                                        )
                                                                                      (let ((v1-103 (&+ v1-102 256)))
                                                                                        (let ((a0-79 (the-as game-save-tag (&+ v1-103 0))))
                                                                                          (set! (-> a0-79 elt-type) (game-save-elt sfx-volume))
                                                                                          (set! (-> a0-79 elt-count) 0)
                                                                                          (set! (-> a0-79 user-float0) (-> *setting-control* default sfx-volume))
                                                                                          )
                                                                                        (let ((v1-104 (&+ v1-103 16)))
                                                                                          (let ((a0-80 (the-as game-save-tag (&+ v1-104 0))))
                                                                                            (set! (-> a0-80 elt-type) (game-save-elt music-volume))
                                                                                            (set! (-> a0-80 elt-count) 0)
                                                                                            (set! (-> a0-80 user-float0) (-> *setting-control* default music-volume))
                                                                                            )
                                                                                          (let ((v1-105 (&+ v1-104 16)))
                                                                                            (let ((a0-81 (the-as game-save-tag (&+ v1-105 0))))
                                                                                              (set! (-> a0-81 elt-type) (game-save-elt dialog-volume))
                                                                                              (set! (-> a0-81 elt-count) 0)
                                                                                              (set! (-> a0-81 user-float0) (-> *setting-control* default dialog-volume))
                                                                                              )
                                                                                            (let ((v1-106 (&+ v1-105 16)))
                                                                                              (let ((a0-82 (the-as game-save-tag (&+ v1-106 0))))
                                                                                                (set! (-> a0-82 elt-type) (game-save-elt language))
                                                                                                (set! (-> a0-82 elt-count) 0)
                                                                                                (set! (-> a0-82 user-uint64) (the-as uint (-> *setting-control* default language)))
                                                                                                )
                                                                                              (let ((v1-107 (&+ v1-106 16)))
                                                                                                (let ((a0-83 (the-as game-save-tag (&+ v1-107 0))))
                                                                                                  (set! (-> a0-83 elt-type) (game-save-elt screenx))
                                                                                                  (set! (-> a0-83 elt-count) 0)
                                                                                                  (set! (-> a0-83 user-float0) (the float (-> *setting-control* default screenx)))
                                                                                                  )
                                                                                                (let ((v1-108 (&+ v1-107 16)))
                                                                                                  (let ((a0-84 (the-as game-save-tag (&+ v1-108 0))))
                                                                                                    (set! (-> a0-84 elt-type) (game-save-elt screeny))
                                                                                                    (set! (-> a0-84 elt-count) 0)
                                                                                                    (set! (-> a0-84 user-float0) (the float (-> *setting-control* default screeny)))
                                                                                                    )
                                                                                                  (let ((v1-109 (&+ v1-108 16)))
                                                                                                    (let ((a0-85 (the-as game-save-tag (&+ v1-109 0))))
                                                                                                      (set! (-> a0-85 elt-type) (game-save-elt vibration))
                                                                                                      (set! (-> a0-85 elt-count) 0)
                                                                                                      (set! (-> a0-85 user-uint64) (the-as uint (if (-> *setting-control* default vibration)
                                                                                                                                                    1
                                                                                                                                                    0
                                                                                                                                                    )
                                                                                                                                          )
                                                                                                            )
                                                                                                      )
                                                                                                    (let ((v1-110 (&+ v1-109 16)))
                                                                                                      (let ((a0-86 (the-as game-save-tag (&+ v1-110 0))))
                                                                                                        (set! (-> a0-86 elt-type) (game-save-elt play-hints))
                                                                                                        (set! (-> a0-86 elt-count) 0)
                                                                                                        (set! (-> a0-86 user-uint64) (the-as uint (if (-> *setting-control* default play-hints)
                                                                                                                                                      1
                                                                                                                                                      0
                                                                                                                                                      )
                                                                                                                                            )
                                                                                                              )
                                                                                                        )
                                                                                                      (let ((v1-111 (&+ v1-110 16)))
                                                                                                        (let ((a0-87 (the-as game-save-tag (&+ v1-111 0))))
                                                                                                          (set! (-> a0-87 elt-type) (game-save-elt video-mode))
                                                                                                          (set! (-> a0-87 elt-count) 0)
                                                                                                          (let ((a1-121 (-> *setting-control* default video-mode)))
                                                                                                            (set! (-> a0-87 user-uint64) (the-as uint (cond
                                                                                                                                                        ((= a1-121 'ntsc)
                                                                                                                                                        1
                                                                                                                                                        )
                                                                                                                                                        ((= a1-121 'pal)
                                                                                                                                                        2
                                                                                                                                                        )
                                                                                                                                                        (else
                                                                                                                                                          0
                                                                                                                                                          )
                                                                                                                                                        )
                                                                                                                                                )
                                                                                                                  )
                                                                                                            )
                                                                                                          )
                                                                                                        (let ((v1-112 (&+ v1-111 16)))
                                                                                                          (let ((a0-88 (the-as object (&+ v1-112 0))))
                                                                                                            (set! (-> (the-as game-save-tag a0-88) elt-type) (game-save-elt aspect-ratio))
                                                                                                            (set! (-> (the-as game-save-tag a0-88) elt-count) 0)
                                                                                                            (let ((a1-125 (-> *setting-control* default aspect-ratio)))
                                                                                                              (set! (-> (the-as (pointer int64) a0-88)) (cond
                                                                                                                                                          ((= a1-125 'aspect4x3)
                                                                                                                                                          1
                                                                                                                                                          )
                                                                                                                                                          ((= a1-125 'aspect16x9)
                                                                                                                                                          2
                                                                                                                                                          )
                                                                                                                                                          (else
                                                                                                                                                            0
                                                                                                                                                            )
                                                                                                                                                          )
                                                                                                                    )
                                                                                                              )
                                                                                                            )
                                                                                                          (set! (-> arg0 length) (&- (&+ v1-112 16) (the-as uint (the-as pointer (-> arg0 tag)))))
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    )
                                                                                                  )
                                                                                                )
                                                                                              )
                                                                                            )
                                                                                          )
                                                                                        )
                                                                                      )
                                                                                    )
                                                                                  )
                                                                                )
                                                                              )
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  (none)
  )
  
(defun reset-to-level-start ()
  (let ((checkpointName 
      (case (-> *target* current-level name)
        (('training)
          "training-start"
          )
        (('village1)
          "village1-warp"
          )
        (('beach)
          "beach-start"
          )
        (('jungle 'jungleb)
          "jungle-start"
          )
        (('misty)
          "misty-start"
          )
        (('firecanyon)
          "firecanyon-start"
          )
        (('village2)
          "village2-warp"
          )
        (('sunken 'sunkenb)
          "sunken-start"
          )
        (('swamp)
          "swamp-start"
          )
        (('rolling)
          "rolling-start"
          )
        (('ogre)
          "ogre-start"
          )
        (('village3)
          "village3-warp"
          )
        (('snow)
          "snow-start"
          )
        (('darkcave 'maincave 'robocave)
          "maincave-start"
          )
        (('lavatube)
          "lavatube-start"
          )
        (('citadel)
          "citadel-start"
          )
        (else   ;; should never be hit
          "training-start"
          )
        )
      )
    )
    (format 0 "fuel cell anim warp -> ~A~%" checkpointName)
    (sound-play "menu-close")
    
    ;; reset unfinished stuff
    (dotimes (idx (game-task max))  ;; for each game-task...
      (when (and (nonzero? idx) (not (task-complete? *game-info* (the-as game-task idx)))) ;; if not completed...
        (let ((tsk-ctrl (get-task-control (the-as game-task idx))))
          (dotimes (jdx (-> tsk-ctrl stage length)) ;; open all stages
            (open-task! (-> tsk-ctrl stage jdx))
            )
          )
        )
      )
    (reset! (-> *target* fact-info-target) 'buzzer)
    
    (let ((tmp-save (new 'loading-level 'game-save #x10000)))
      ;; backup game state (excluding orbs, crates, etc)
      (partial-backup-game-info *game-info* tmp-save "save")
      (initialize! *game-info* 'game tmp-save checkpointName)

      ;; ;; set checkpoint to start of level
      ;; (set! (-> *game-info* current-continue) (get-continue-by-name *game-info* checkpointName))
      ;; (load-game! *game-info* tmp-save)
      ;; (set! (-> *game-info* current-continue) (get-continue-by-name *game-info* checkpointName))

      ;; ;; trigger death to warp to checkpoint
      ;; ;; this ensures init functions for new level run (misty boat, citadel elevator)
      ;; (initialize! *game-info* 'die tmp-save (the-as string #f))
      )
    )

  (none)
  )